<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[记录我的大前端修行3.1]]></title>
    <url>%2F2019%2F03%2F28%2Fh5-3%2F</url>
    <content type="text"><![CDATA[day1宽高自适应的概念和使用网页布局中经常要定义元素的宽和高。但很多时候我们希望元素的大小能够根据窗口或子元素自动调整，这就是自适应 元素自适应在网页布局中非常重要，它能够使网页显示更灵活，可以适应在不同设备、不同窗口和不同分辨率下显示。 (1)宽度自适应 元素宽度设置为100%。（块元素宽度默认为100%） width:100%; (2) 高度自适应 元素{height:auto;}/高度不写 最小高度注：height属性在IE6里就类似min-height作用。 注：IE6及以下版本不识别该组属性。 过滤器的使用下划线属性过滤器当在一个属性前面增加了一个下划线后，由于符合标准的浏览器不能识别带有下划线的属性而忽略了这个声明，但是在IE6及更低版本浏览器中会继续解析这个规则。 语法：选择符{_属性：属性值；} !important 关键字过滤器它表示所附加的声明具有最高优先级. 语法：选择符{属性：属性值!important;} 最小高度和高度自适应引发的兼容问题元素具备最小高度的自适应 1234567min-height属性：最小高度；(IE6浏览器不识别该属性)兼容元素具备最小高度自适应的方法：hack1:min-height:value; _height:value;hack2:min-height:value; height:auto !important; height:value;(建议使用) 伪对象选择符 ::after与content属性一起使用，定义在对象后的内容。如：div::after{content:url(logo.jpg);} div::after{content:&quot;文本内容&quot;;} ::before与content属性一起使用，定义在对象前的内容。如：div:before{content:&quot;在其前放内容&quot;;} ::first-letter定义对象内第一个字符的样式。说明：(该伪元素只能用于块级元素。) ::first-line定义对象内第一行的样式。该伪元素只能用于块级元素。ie6以下版本浏览器不支持伪对象选择符。 注：一个冒号叫伪类选择器，两个冒号叫伪对象选择器。 自适应窗口(一屏页面的书写)元素宽高度自适应窗口高度 设置方法：html,body{width:100%;height:100%;} day2表单标签及属性补充表单字段集语法：&lt;fieldset disabled=&quot;disabled&quot;&gt;&lt;/fieldset&gt; 说明：相当于一个方框，在字段集中可以包含文本和其他元素。该元素用于对表单中的元素进行分组并在文档中区别标出文本。fieldset元素可以嵌套，在其内部可以在设置多个fieldset对象。disabled定义空间禁制可用； 字段级标题语法：&lt;legend align=&quot;left/center/right&quot;&gt;&lt;/legend&gt; 说明：legend元素可以在fieldset对象绘制的方框内插入一个标题。legend元素必须是fieldset内的唯一个元素。 提示信息标签语法：&lt;label for=&quot;绑定控件id名&quot;&gt;&lt;/label&gt; 说明：label元素用来定义标签，为页面上的其他元素指定提示信息。要将label元素绑定到其他的控件上，可以将label元素的for属性设置为与该控件的id属性值相同。 上传文本框语法：&lt;input type=&quot;file&quot; multiple=&quot;multiple&quot; /&gt; 说明：type属性值新增的类型有：file 文件类型，可进行文件的选择，multiple 属性可实现多选 图像域语法：&lt;input type=&quot;image&quot; src=&quot;&quot; width=&quot;&quot; height=&quot;&quot; alt=&quot;图片&quot; /&gt; 说明：火狐低版本不支持此表单元素; 表格标签及属性补充单元格间距 border-spacing语法：border-spacing:value; 说明：单元格间距(该属性必须给table添加) 表示单元格边框之间的距离， 不可取负值 合并相邻单元格边框 border-collapse语法：border-collapse:separate/collapse; 说明：合并相邻单元格边框 (该属性必须给table添加) separate(边框分开)默认值； collapse(边框合并) 无内容 empty-cells语法：empty-cells:show/hide; 说明：定义当单元格无内容时，是否显示该单元格的边框区域；show：显示 ；hide：隐藏； 定义表格布局 table-layout语法：table-layout:auto/fixed; 定义表格的布局算法，设置fixed，文本为英文字母且无空格时，内容超出单元格宽度则固定不变；如没设宽则平均分配；设置auto时，则随内容宽度而定；火狐浏览器存在兼容。 (fixed：固定宽，不会随内容多少改变单元格宽,宽度可以明确定义，没有定义时则宽度会平均分配，高度则会随内容变化) 隔行变色双数行： tr:nth-child(2n){ } even (偶数) 单数行：tr:nth-child(2n+1){ } odd 奇数 设置单数单元格的样式和双数单元格的样式 表格标题&lt;caption&gt;标题内容&lt;/caption&gt; caption:表格标题 表格标题位置：caption-side:top/right/bottom/left 说明：left,right位置只有火狐识别，top,bottom IE7上版本支持，ie7以下版本不支持其它属性值，只识别top HTML 重要属性1234567891）colspan="value" 合并列2）rowspan="value" 和并行3）valign="top/bottom/middle/baseline" 垂直对齐方式 4）rules="rows/cols/all/none" 添加组分隔线说明：rows:位于行之间的线条cols:位于列之间的线条all：位于行和列之间的线条none:没有线条 数据列分组1234567891011(1) &lt;colgroup span="value"&gt;&lt;/colgroup&gt;(2) &lt;col span="value" /&gt;说明：1）col和colgroup元素会根据从左到右的顺序依次对数据表格进行分组。2）span属性显示指定相邻几列组成一组，span属性值默认为1，默认时仅定义一列为一组。3）可以通过给table添加rules="groups"属性来给分组列添加组的分割线。注意：虽然col和colgroup具有相同的功能，一个是单标签一个是双标签，两个都存在浏览器兼容问题。 数据行分组1234567&lt;thead&gt;&lt;/thead&gt; 表头&lt;tbody&gt;&lt;/tbody&gt; 表体&lt;tfoot&gt;&lt;/tfoot&gt; 表尾说明：一个Table中，只能包含一个thead,一个tfoot,但可包含多个tbody。 thead 元素应该与 tbody 和 tfoot 元素结合起来使用。 tbody 元素用于对 HTML 表格中的主体内容进行分组， tfoot 元素用于对 HTML 表格中的表注（页脚）内容进行分组。 如果要使用 thead、tfoot 以及 tbody 元素，就必须使用全部的元素。 它们的出现次序是：thead、tbody/tfoot、，这样浏览器就可以在收到所有数据前呈现页脚了。必须在 table 元素内部使用这些标签。 提示：在默认情况下这些元素不会影响到表格的布局。不过，可以使用 CSS 使这些元素改变表格的外观。 详细描述： thead、tfoot 以及 tbody 元素使我们有能力对表格中的行进行分组。当创建某个表格时，也许希望拥有一个标题行，一些带有数据的行，以及位于底部的一个总计行。这种划分使浏览器有能力支持独立于表格标题和页脚的表格正文滚动。当长的表格被打印时，表格的表头和页脚可被打印在包含表格数据的每张页面上。 给网站状态加图标把下面代码添加在meta标签里： 1&lt;link href=&quot;img/timg.jpg&quot; rel=&quot;shortcut icon&quot;&gt; rel=&quot;shortcut icon&quot;属性和属性值必须写 day3H5 新的文档声明在 HTML 4.01 中，DOCTYPE 声明引用 文档类型定义DTD（Document Type Definition)，因为 HTML 4.01 基于 SGML（标准通用标记语言，是一种定义电子文档结构和描述其内容的国际标准语言；）。DTD 规定了标记语言的规则，这样浏览器才能正确地呈现内容。HTML5 不基于 SGML，所以不需要引用 DTD。 提示：请始终向 HTML 文档添加 DOCTYPE 声明，这样浏览器才能获知文档类型。扩展：CSS盒子模型：CSS-标准盒模型 &amp; 怪异盒模型？ CSS中Box model是分为两种:: W3C标准 和 IE标准盒子模型。大多数浏览器采用W3C标准模型，而IE中则采用Microsoft自己的标准。怪异模式是“部分浏览器在支持W3C标准的同时还保留了原来的解析模式”，怪异模式主要表现在IE内核的浏览器。 DOCTYPE缺失则在ie6，ie7，ie8下将会触发怪异模式（quirks 模式）。当不对doctype进行定义时，会触发怪异模式。在标准模式下，一个块的总宽度= width + margin(左右) + padding(左右) + border(左右)在怪异模式下，一个块的总宽度= width + margin(左右)（即width已经包含了padding和border值）## H5 的特点- 1）更简洁、但是在实际开发中要注意书写规范，利于后期维护- 2）标签的语义化 扩展：语义化的重要性： ① 当页面加载失败的时候，还能够呈现出清晰的结构 ② 有利于SEO优化，利于被搜索引擎收录（即便于网络爬虫的识别） ③ 在项目开发及维护时，语义化的也很大程度上降低开发难度，节省成本- 3）语法更宽松- 4）多设备跨平台- 5）自适应网页设计## 语义化语义化是指用合理HTML标记以及其特有的属性去格式化文档内容。通俗地讲,语义化就是对数据和信息进行处理,使得机器可以理解.语义化的(X)HTML文档有助于提升你的网站对访客的易用性，比如使用PDA、文字浏览器以及残障人士将从中受益。对于搜索引擎或者爬虫软件来说，则有助于它们建立索引，并可能给予一个较高的权值。事实上SEO最有效的一种办法，就是对网页的HTML结构进行重构，实质上就是语义化。## H5新增的语义化标签header头标签nav 导航标签article文章标签aside侧边栏导航footer 页脚section 章节、页眉、栏目### section&gt; 表示内容区块,一般入章节、页眉、页脚或者页面中的其他部分。可以与h1-h6等元素结合起来使用，标示文档的结构### article&gt; 表示页面中的一块与上下文不相关的独立内容，譬如博客中的一篇文章或者报纸中的一篇文章### aside&gt; Aside表示acticle元素的内容之外的，与article元素的内容相关的辅助信息。例如：广告、侧边栏。### header&gt; 表示页面中一个内容区块或者整个页面的标题### footer&gt; 表示整个页面或者页面中的一个内容区块的脚注。一般来说，他会包含创作者的姓名、创作日期以及创作者联系信息。### nav&gt; 表示页面中导航链接的部分、① 传统的导航条 ② 腾讯新闻 ③侧边栏导航 ④内业导航 ：百度百科### figure&gt; 用作文档中插图的图像，一般表示文档主体内容中的一个独立单元。使用figcaption元素为figure元素添加标题。&gt; ◆ figcaption 表示 figure 的标题。从属于 figure ， 并且， figure 中只能放置一个 figcaption。类似自定义列表dl### video定义视频，比如电影片段或其他视频流video src=”路径地址” controls&gt;您的浏览器不支持video&lt;/video&gt;video允许有多个source元素，source元素可以连接不同的视频文件，浏览器将使用第一个可识别的格式进行播放&lt;source src=”video.ogg” type=”video/ogg”/&gt;&lt;source src=”video.webm” type=”video/webm”/&gt;提示：可以在开始标签和结束标签之间放置文本内容，这样老的浏览器就可以显示出不支持该标签的信息。HTML5里video标签支持哪些格式的视频文件？Ogg:带有Threora视频编码和Vorbis音频编码的Ogg文件；MPEG4：带有H.264视频编码和AAC音频编码的MPEG4文件；WebM：带有VP8视频编码和Vorbis音频编码的WebM文件1234567891011Chrome Android 60.X+ 不能自动播放audio音频的解决办法目前最新的Chrome Android版本已经是72.X。而Chrome Android等一些浏览器默认限制了自动播放音频视频等，需要用户有点击的动作后才可以播放。这样的原因在于很多用户流量需要付费，而限制了自动播放可以避免用户在不知情的情况下产生高额的流量费用。在60.X版本之前，chrome://flags中有一个disable-gesture-requirement-for-media-playback的选项，让用户在浏览器中输入chrome://flags/#disable-gesture-requirement-for-media-playback将该选项应用后即可。而从60.X版本开始，这个选项被移除了，取而代之的是一个名为Autoplay policy的选项。我们在浏览器中输入chrome://flags/#autoplay-policy，然后在高亮的选项中，将Default换成No user gesture is required### embedembed标签用于定义嵌套的内容，包括各种媒体，格式可以是midi、wav、AIFF、AU、MP3、Flash等### audio定义音频，比如音乐或其他音频流&lt;audio src=”someaudio.wav”&gt;您的浏览器不支持 audio 标签。&lt;/audio&gt;提示：可以在开始标签和结束标签之间放置文本内容，这样老的浏览器就可以显示出不支持该标签的信息。### mark高亮显示文字，一个比较典型的应用就是在搜索结果中向用户高亮显示搜索关键词。### canvas表示图形，比如图标和其他图像。这个元素本身没有行为，仅提供一块画布，但它把一个绘图API展现给客户端js，以使脚本能够把想绘制的东西绘制到这块画布上&lt;canvas id=“myCanvas” width=“200” height=“200”&gt;&lt;/canvas&gt;### dalalistdatalist提供一个事先定义好的列表，通过id与input关联，当在input内输入时就会有自动完成（autocomplete）的功能，用户将会看见一个下拉列表供其选择。## H5新增的表单元素Search/tel/url/email/number/range/color/file/Datetime/date/month/week/time/datetime-local### email专门用来输入email地址的文本框,如果该文本框中内容不是email地址格式的，则不允许提交。但它不检查email地址是否存在。 具有multiple属性，它允许在该文本框中输入一串以逗号分隔的email地址。### urlurl：专门用来输入URL地址的文本框。如果该文本框中内容不是URL地址格式的，则不允许提交。和required属性配合使用。### numberNumber：专门用来输入数字的文本框。在提交时会检查其中的内容是否为数字，具有min、max、step的属性。&lt;input name=“number1” type=“number” value=“25” min=“10” max=“100” step=“5” /&gt;### range是用来只允话输入一段范围内数值的文本框，它具有min属性与max属性，及step属性，可以指定每次拖动的步幅。&lt;input name=“range1” type=“range” value=“25” min=“0” max=“100” step=“5” /&gt;min 最小值max 最大值step 数字间隔### date pickers拥有多个可供选取日期和时间的新输入类型。 date - 选取日、月、年 Internet Explorer 或 Firefox 不支持 “month” 元素。month - 选取月、年 Internet Explorer 或 Firefox 不支持 “month” 元素。week - 选取周和年 Internet Explorer 或 Firefox 不支持 “month” 元素。time - 选取时间（小时和分钟） Internet Explorer 或 Firefox 不支持 “month” 元素。datetime - 选取时间、日、月、年（UTC 时间）Internet Explorer、Firefox 或者 Chrome 不支持 “datetime 元素，Safari 中部分支持。Opera 12 以及更早的版本中完全支持。datetime-local - 选取时间、日、月、年（本地时间）Internet Explorer 或 Firefox 不支持 “month” 元素。 H5新增的表单验证placeholder placeholder属性：文本框处于未输入状态时文本框中显示的输入提示。 autofocus autofocus属性：给文本框、选择框、或者按钮控件加上该属性，当打开页面时，该控件自动获得国标焦点，一个页面只能有一个。 required required属性：验证输入不能为空 list list属性：结合datalist元素使用 自动验证 min、max、step：为包含数字或日期的 input 类型规定限定（约束）max: 最大值min: 最小值step: 数字间隔 不自动验证 novalidate 属性规定当提交表单时不对其进行验证。给form添加。 day4CSS3简介如同人类的的进化一样，CSS3 是 CSS2 的“进化”版本，在 CSS2 基础上，增强或新增了许多特性， 弥补了CSS2的众多不足之处，使得Web开发变得更为高效和便捷。 CSS3 现状1、浏览器支持程度差，需要添加私有前缀 2、移动端支持优于PC端 3、不断改进中 4、应用相对广泛 如何对待1、坚持渐进增强原则 2、考虑用户群体 3、遵照产品的方案 4、听Boss的 渐进增强和优雅降级渐进增强针对低版本浏览器进行构建页面，保证最基本的功能，然后再针对高级浏览器进行效果、交互等改进和追加功能达到更好的用户体验。 优雅降级一开始就构建完整的功能，然后再针对低版本浏览器进行兼容。 区别：优雅降级是从复杂的现状开始，并试图减少用户体验的供给，而渐进增强则是从一个非常基础的，能够起作用的版本开始，并不断扩充，以适应未来环境的需要。降级（功能衰减）意味着往回看；而渐进增强则意味着朝前看，同时保证其根基处于安全地带。## CSS3选择器### 属性选择器| 选择器 | 示例 | 含义 || —————– | ——– | ———————————– || E[attr] | | 存在attr属性即可 || E[attr=val] | | 属性值完全等于val || E[attr*=val] | | 属性值里包含val字符并且在“任意”位置 || E[attr^=val] | | 属性值里包含val字符并且在“开始”位置 || E[attr$=val] | | 属性值里包含val字符并且在“结束”位置 |### 伪类选择器除了以前学过的 :link、:active、:visited、:hover，CSS3又新增了其它的伪类选择器。#### 结构(位置)伪类以某元素（E）相对于其父元素或兄弟元素的位置来获取无素；| 选择器 | 示例 | 含义 || ———————– | ——– | ——————————- || E:first-child | | 其父元素的第1个子元素 || E:last-child | | 其父元素的最后1个子元素 || E:nth-child(n) | | 其父元素的第n个子元素 || E:nth-last-child(n) | | 其父元素的第n个子元素（倒着数） |n遵循线性变化，其取值0、1、2、3、4、… n可是多种形式：nth-child(2n+0)、nth-child(2n+1)、nth-child(-1n+3)等； 注：指E元素的父元素，并对应位置的子元素必须是E 空伪类E:empty 选中没有任何子节点的E元素；（使用不是非常广泛） 目标伪类E:target 结合锚点进行使用，处于当前锚点的元素会被选中； 排除伪类E:not(selector) 除selector（任意选择器）外的元素会被选中； 伪元素选择器1、E::first-letter文本的第一个单词或字（如中文、日文、韩文等） 2、E::first-line 文本第一行 3、E::selection 可改变选中文本的样式； 4、E::before和E::after 在E元素内部的开始位置和结束位创建一个元素，该元素为行内元素，且必须要结合content属性使用。 E:after、E:before在旧版本里是伪元素，CSS3的规范里:用来表示伪类，::用来表示伪元素，但是在高版本浏览器下E:after、E:before会被自动识别为E::after、E::before，这样做的目的是用来做兼容处理。 “:” 与 “::” 区别在于区分伪类和伪元素 层次选择器后代选择器 （ E F ）后代选择器也被称作包含选择器,所起作用就是可以选择某元素的后代元素，比如说:E F，前面E为祖先元素，Ｆ为后代元素，所表达的意思就是选择了Ｅ元素的所有后代Ｆ元素，请注意他们之间需要一个空格隔开。这里Ｆ不管是E元素的子元素或者是孙元素或者是更深层次的关系，都将被选中，换句话说，不论Ｆ在Ｅ中有多少层关系，都将被选中 所有浏览器都支的后代选择器。 子元素选择器（ E &gt; F ）子元素选择器只能选择某元素的子元素，其中E为父元素，而F为子元素，其中E&gt;F所表示的是选择了Ｅ元素下的所有子元素Ｆ。这和后代选择器（Ｅ Ｆ）不一样，在后代选择器中Ｆ是Ｅ的后代元素，而子元素选择器Ｅ &gt; F，其中Ｆ仅仅是Ｅ的子元素而以。 IE6不支持子元素选择器。 相邻兄弟元素选择器 （ E + F ）相邻兄弟选择器可以选中紧跟在另一元素后的元素。不能选中被隔开的元素。h1 + p {background: green;color: yellow; border: 1px solid #ccc;}IE6不支持这个选择器 通用兄弟选择器 ( E ~ F )通用兄弟元素选择器：给指定选择器后面的所有选择器选中的所有标签加样式。无论后面元素有没有被隔开都可以选中。 拓展/补充/吧啦啦啦css3新增规定，一个冒号: 代表伪类选择器，两个冒号::代表伪元素选择器。]]></content>
      <categories>
        <category>大前端</category>
      </categories>
      <tags>
        <tag>html5</tag>
        <tag>css3</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[家有ikaros初成长]]></title>
    <url>%2F2019%2F03%2F22%2Fikaorome%2F</url>
    <content type="text"><![CDATA[个人简介在右边栏关于里面，拿到这里发表只是测试一下格式是否一致。 脑浆炸裂about me伊卡洛斯 @ikaros 目前正处于自我修改阶段……对于自我的描述不算很准确…… 翻了新年……发生的事情太多……系统混乱……自我调节功能尚在恢复……小概率可能中道崩殂 曾经轻度中二病，自以为错的是这个世界。目前只想做一只快乐的现充。 在外人面前装作这个年龄本不应该有的成熟，在熟人面前……其实也比较成熟。常因为朋友过度沙雕而显得与他们格格不入。 但是，陷入情感里的ikaros自动退化为幼稚形态，各种天马行空胡思乱想过度单纯，不过我喜欢就好辣。 深知山外有山，人外有人。但关键时候就是没人把我锤醒。 胆子小，脸皮薄。我不是，我没有，你别乱说。 待续… 三观 理解并认可LGBT 非礼勿视，非礼勿听，非礼勿言，非礼勿动。克己复礼为仁。一日克己复礼，天下归仁焉。（fnndp） 看重物质基础 但不必穷尽一生去追求 不懂政治 不谈政治 轻微恐婚 会先学会怎样在这个社会独自生存 不希望另一半来为自己操心 更多的是能够照顾好对方 把“谢谢”挂在嘴边总会有好事发生 不喜欢熊孩子 但不是讨厌。乖孩子有糖吃 坚决反对种族歧视 反对人类暴政 世界属于三… 玩笑阔以开 玩儿梗要有度 不喜欢复读 但认为模因(meme)确实能够推动现阶段人类社会发展 待补充… 技能精通 C / PHP / Java / Python / HTML5 / CSS3 / JavaScript 的单词拼写以及HelloWord的写法 不会MarkDown / 不会Linux / 不会数据库 / 不会单片机 / 不会树莓派 不懂日语 | 不懂英文 | 不懂普通发 | 不懂粤语 什么都不会，我只会等死。 没错我也是近三十年都没有经验的全栈都不会工程师 文能提笔安天下，武能上马定乾坤。 译文：高中语文课写小说，在教室后面黑板写个人原创诗词，语文考试作文绝对不会写议论文（高考除外）。大学积极参加寝室杯养生篮球赛，跑过马拉松（迷你5km），街子古镇往返骑行（电瓶车），团组织集团摆poss拍照活动…… 送过外卖——并自己换了一台笔记本，目前在用。 学院食堂外卖大总管——负责将各个档口的外卖拿到后边去让外卖小哥送，食堂一楼混吃混喝不收一分钱。 奶茶店小助手——每天奶茶喝到想吐。 便利店上过夜班——11小时的孤独与煎熬。 乡村基计时工——只求小孩子吃不完的饭不要混上可乐全部倒在一起。 爱好喜欢各种富有创新意思的东西，通俗来讲就是我没有接触过的东西。 观赏特定的某些文艺作品 其形式包括但不限于美剧|日剧|电影|动画|漫画|游戏|轻小说|网文|传统文学 睡到日上三竿 精致睡眠漫无目的乱走 散步看着月亮放空 赏月用奇怪的文字自我满足 写作 –分割&amp;nbsp分割– 以上爱好在没有充裕的空闲时间下–不予成立！ 目前本ikaros只爱学习。 先自食其力，再谈午后阳光，诗和远方。 以上です！！！ 联系方式e-Mail: ikarosyu@Gmail.com 你的邮件会慢慢悠悠恍恍惚惚不一定地推送到我的手机 但如果你想找到我可以通过首页左边栏里八种方式联系到我 想我的方式多种多样，我与你同在~~ love&amp;peace]]></content>
      <categories>
        <category>日常</category>
      </categories>
      <tags>
        <tag>ikaros</tag>
        <tag>thoughts</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[如何用平淡的语气写出虐到让人喘不过气，或让读者感到震撼、震惊的感觉？]]></title>
    <url>%2F2019%2F03%2F21%2Fzhuanzai1%2F</url>
    <content type="text"><![CDATA[“炖好了吗？”丈夫冲着厨房问道。“差不多了，这就给你端来。”厨房内传来妻子的声音。丈夫看着瘦弱的妻子从里头出来，她握着汤碗的手早已骨瘦如柴。“你先吃吧。”妻子把汤放下。丈夫没有说话，直接喝了一口，然后夹起一块肉，放入嘴里。而妻子就这么看着他。不一会儿，肉汤已少了一半。妻子咽了咽口水，也拿起了筷子。肉汤喝完，肉也没了，只剩下一堆碎骨。骨头是丈夫剁碎的，但此刻他已分别不出哪些是头盖骨，哪些是尾椎骨。妻子看了一眼丈夫，又摸了摸还没饱的肚子。 “把狗子也换了吧。”丈夫说道。妻子点了点头，从房间里抱出了个小孩。刚走到门口，却见隔壁邻居已站在了门前。她的手里，也有个孩子。 出自《左传·宣公十五年》–《易子而食》]]></content>
      <categories>
        <category>日常</category>
        <category>转载</category>
      </categories>
      <tags>
        <tag>thoughts</tag>
        <tag>amazed</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[记录我的大前端修行2.1]]></title>
    <url>%2F2019%2F03%2F20%2Fh5-2%2F</url>
    <content type="text"><![CDATA[day1文本样式属性文本修饰 text-decoration语法： 12345&#123;text-decoration:none/underline/overline/line-through;&#125;none:没有修饰underline:添加下划线overline:添加上划线line-through:添加删除线 首行缩进 text-indent语法： 1&#123;text-indent:数值;&#125; text-indent可以取负值，可实现隐藏文本，悬挂缩进。text-indent属性只对第一行起作用，若第一行不是文本则没变化。 1&#123;text-indent:2em;&#125; 首行缩进两字符 字间距 letter-spacing 1&#123;letter-spacing:value&#125; 控制英文字母或汉字的字距。 文字属性简写 font1选择器&#123;font: font-style font-weight font-size/line-height font-family;&#125; 使用font属性时，必须按上面语法格式中的顺序书写，不能更换顺序，各个属性以空格隔开。 注意：其中不需要设置的属性可以省略（取默认值），但必须保留font-size和font-family属性 ，否则font属性将不起作用。 列表属性定义列表符号样式1&#123;list-style-type:disc(实心圆)/circle(空心圆)/square(实心方块)/none(去掉列表符号);&#125; 使用图片作为列表符号1list-style-image：url(所使用图片的路径及全称)； 定义列表符号的位置1list-style-position:outside(外边)/inside(里边)； 去掉列表样式1list-style:none; 背景属性背景图片平铺属性12345&#123;background-repeat:no-repeat/repeat/repeat-x/repeat-y &#125;no-repeat:不平铺repeat：平铺repeat-x：横向平铺repeat-y ：纵向平铺 背景图的固定123&#123;background-attachment:scroll(滚动)/fixed(固定);&#125;fixed 固定，不随内容一块滚动；scroll:随内容一块滚动。 背景图片的位置1&#123;background-position:left/center/right/数值 top/center/bottom/数值;&#125; 水平方向上的对齐方式（left/center/right）或值 垂直方向上的对齐方式(top/center/bottom)或值 background-position:值1 值2; 两个值 ：第一个值表示水平位置的值，第二个值：表示垂直的位置。 当两个值都是center的时候写一个值就可以代表的是水平位置和垂直位置 说明：向左方向，向上方向是负值 123背景属性的缩写语法：background:属性值1 属性值2 属性值3；背景缩写：background:#f00 url（背景图片的路径及全称） no-repeat center top； 浮动文档流(普通流/标准流)前面我们说过，网页布局的核心，就是用CSS来摆放盒子位置。如何把盒子摆放到合适的位置？ CSS的定位机制有3种：普通流（标准流）、浮动和定位。 html语言当中另外一个相当重要的概念———-标准流！或者普通流。普通流实际上就是一个网页内标签元素正常从上到下，从左到右排列顺序的意思，比如块级元素会独占一行，行内元素会按顺序依次前后排列；按照这种大前提的布局排列之下绝对不会出现例外的情况叫做普通流布局。 什么是浮动元素的浮动是指设置了浮动属性的元素会脱离标准普通流的控制，移动到其父元素中指定位置的过程。 浮动属性详解 浮动首先创建包含块的概念（包裹）。就是说， 浮动的元素总是找理它最近的父级元素对齐。但是不会超出内边距的范围。 浮动的元素排列位置，跟上一个元素（块级）有关系。如果上一个元素有浮动，则A元素顶部会和上一个元素的顶部对齐；如果上一个元素是标准流，则A元素的顶部会和上一个元素的底部对齐。 由2可以推断出，一个父盒子里面的子盒子，如果其中一个子级有浮动的，则其他子级都需要浮动。这样才能一行对齐显示。 浮动脱离标准流，不占位置，会影响后面的标准流。浮动只有左右浮动。 元素添加浮动后，元素会具有行内块元素的特性。元素的大小完全取决于定义的大小或者默认的内容多少 浮动根据元素书写的位置来显示相应的浮动。 总结： 浮动 —&gt; 浮漏特 浮： 加了浮动的元素盒子是浮起来的，漂浮在其他的标准流盒子上面。 漏： 加了浮动的盒子，不占位置的，它浮起来了，它原来的位置漏 给了标准流的盒子。 特： 特别注意，这是特殊的使用，有很多的不好处，使用要谨慎。 清除浮动为什么要清除浮动由于浮动元素不再占用原文档流的位置，所以它会对后面的元素排版产生影响，为了解决这些问题，此时就需要在该元素中清除浮动。 如果浮动一开始就是一个美丽的错误，那么请用正确的方法挽救它。 清除浮动的本质清除浮动主要为了解决父级元素因为子级浮动引起内部高度为 0 的问题。 清除浮动的方法（重点）1、额外标签法 1是W3C推荐的做法是通过在浮动元素末尾添加一个空的标签例如 &lt;div style=”clear:both”&gt;&lt;/div&gt;，或则其他标签br等亦可。 优点： 通俗易懂，书写方便 缺点： 添加许多无意义的标签，结构化较差。 我只能说，w3c你推荐的方法我不接受，你不值得拥有。。。 2、父级添加 overflow 属性方法 可以给父级添加： overflow为 hidden|auto|scroll 都可以实现。可以先定义一个类名，然后把定义好的类名赋给浮动元素的父级元素。 语法：.clear{overflow:hidden;} 优点： 代码简洁 缺点： 内容增多时候容易造成不会自动换行导致内容被隐藏掉，无法显示需要溢出的元素。 3、使用after伪元素清除浮动 使用方法： 123.clearfix:after &#123; content: "."; display: block; height: 0; clear: both; visibility: hidden; &#125; .clearfix &#123;*zoom: 1;&#125; ie6、7 专有 优点： 符合闭合浮动思想 结构语义化正确 缺点： 由于IE6-7不支持:after，使用 zoom:1触发 IE6-7 的特有属性 hasLayout 4、使用before和after双伪元素清除浮动 使用方法： 12345678.clearfix:before,.clearfix:after&#123; content:"."; display:table; &#125;.clearfix:after&#123; clear:both;&#125;.clearfix&#123;*zoom:1;&#125; 优点： 代码更简洁 缺点： 由于IE6-7不支持:after，使用 zoom:1触发 IE6-7 的特有属性 hasLayout。 day2盒模型所谓盒子模型就是把HTML页面中的元素看作是一个矩形的盒子，也就是一个盛装内容的容器。每个矩形都由元素的内容、内边距（padding）、边框（border）和 外边距（margin）组成。 看透网页布局的本质： 把网页元素比如文字图片等等，放入盒子里面，然后利用css摆放盒子的过程，就是网页布局。 盒子边框边框就是那层皮。 橘子皮。。香蕉皮。。橙子皮。。。 1border : border-width / border-style / border-color 边框属性—设置边框样式（border-style） 边框样式用于定义页面中边框的风格，常用属性值如下： none：没有边框即忽略所有边框的宽度（默认值） solid：边框为单实线(最为常用的) dashed：边框为虚线 dotted：边框为点线 double：边框为双实线 表单的边框清零因为表单边框颜色浏览器不同，样式不同，因此我们需要清零，自己定义样式和颜色，从而达到浏览器兼容效果。 1input &#123;border: 0;&#125; textarea &#123;border: 0;&#125; 表格的细线边框border-collapse: collapse 边框的合并 12border-collapse: collapse; //必要border-spacing:0; //可不要 轮廓 outline链接获得焦点 有虚线 和 文本框或者文本域获得焦点时，谷歌等浏览器有 蓝色边框，为了提高用户体验。 12345outline:none;body a:focus &#123;outline:none;&#125;textarea &#123; outline: none; &#125; 盒子边框总结表 设置内容 样式属性 常用属性值 上边框 border-top-style:样式; border-top-width:宽度; border-top-color:颜色; border-top:宽度 样式 颜色; 下边框 border-bottom-style:样式; border- bottom-width:宽度; border- bottom-color:颜色; border-bottom:宽度 样式 颜色; 左边框 border-left-style:样式; border-left-width:宽度; border-left-color:颜色; border-left:宽度 样式 颜色; 右边框 border-right-style:样式; border-right-width:宽度; border-right-color:颜色; border-right:宽度 样式 颜色; 样式综合设置 border-style:上边 [右边 下边 左边]; none无（默认）、solid单实线、dashed虚线、dotted点线、double双实线 宽度综合设置 border-width:上边 [右边 下边 左边]; 像素值 颜色综合设置 border-color:上边 [右边 下边 左边]; 颜色值、#十六进制、rgb(r,g,b)、rgb(r%,g%,b%) 边框综合设置 border:四边宽度 四边样式 四边颜色; 内边距 paddingpadding属性用于设置内边距。 是指 边框与内容之间的距离。 注意： 后面跟几个数值表示的意思是不一样的 值的个数 表达意思 1个值 padding：上下左右边距 比如padding: 3px; 表示上下左右都是3像素 2个值 padding: 上下边距 左右边距 比如 padding: 3px 5px; 表示 上下3像素 左右 5像素 3个值 padding：上边距 左右边距 下边距 比如 padding: 3px 5px 10px; 表示 上是3像素 左右是5像素 下是10像素 4个值 padding:上内边距 右内边距 下内边距 左内边距 比如: padding: 3px 5px 10px 15px; 表示 上3px 右是5px 下 10px 左15px 顺时针 外边距 marginmargin属性用于设置外边距。 设置外边距会在元素之间创建“空白”， 这段空白通常不能放置其他内容。 后面跟几个数值表示的意思同padding 外边距实现盒子居中可以让一个盒子实现水平居中，需要满足一下两个条件： 必须是块级元素。 盒子必须指定了宽度（width） 然后就给左右的外边距都设置为auto，就可使块级元素水平居中。 1.header&#123; width:960px; margin:0 auto;&#125; 清除元素的默认内外边距为了更方便地控制网页中的元素，制作网页时，可使用如下代码清除元素的默认内外边距： 1234567*&#123;padding:0; 清除内边距margin:0; 清除外边距&#125; 注意： 行内元素是只有左右内外边距的，是没有上下内外边距的。 相邻块元素垂直外边距的合并当上下相邻的两个块元素相遇时，如果上面的元素有下外边距margin-bottom，下面的元素有上外边距margin-top，则他们之间的垂直间距不是margin-bottom与margin-top之和，而是两者中的较大者。这种现象被称为相邻块元素垂直外边距的合并（也称外边距塌陷）。 解决方案： 避免就好了。 嵌套块元素垂直外边距的合并对于两个嵌套关系的块元素，如果父元素没有上内边距及边框，则父元素的上外边距会与子元素的上外边距发生合并，合并后的外边距为两者中的较大者，即使父元素的上外边距为0，也会发生合并。 解决方案： 可以为父元素定义1像素的上边框或上内边距。 可以为父元素添加overflow:hidden。 盒子的总宽度和高度使用宽度属性width和高度属性height可以对盒子的大小进行控制。 width和height的属性值可以为不同单位的数值或相对于父元素的百分比%，实际工作中最常用的是像素值。 大多数浏览器，如Firefox、IE6及以上版本都采用了W3C规范，符合CSS规范的盒子模型的总宽度和总高度的计算原则是： 盒子的总宽度= width+左右内边距之和+左右边框宽度之和+左右外边距之和 盒子的总高度= height+上下内边距之和+上下边框宽度之和+上下外边距之和 注意： 1、宽度属性width和高度属性height仅适用于块级元素，对行内元素无效（ img 标签和 input除外）。 2、计算盒子模型的总高度时，还应考虑上下两个盒子垂直外边距合并的情况。 文本溢出相关属性1、溢出属性(容器的) 12345678910overflow:visible/hidden(隐藏)/scroll/auto(自动)/inherit;visible:默认值，内容不会被修剪，会成现在元素框之外；hidden：内容会被修剪，并且其余内容是不可见的；scroll：内容会被修剪，但是浏览器会显示滚动条，以便查看其余的内容;auto：如果内容被修剪，则浏览器会显示滚动条，以便查看其他的内容;inherit：规定应该从父元素继承overflow属性的值。 2、空余空间(了解) 123456789101112white-space：normal/nowrap/pre/pre-wrap /pre-line /inherit 该属性用来设置如何处理元素内的空白；normal：默认值，空白会被浏览器忽略，nowrap:文本不会换行，文本会在同一行上继续，直到遇到&lt;br/&gt;标签为止；pre：空白会被浏览器保留，其行为方式类似HTML中的pre标签；pre-wrap：保留空白符序列，但是正常的进行换行；pre-line:合并空白符序列，但是保留换行符；inherit：规定应该从父元素继承White-space属性的值；(ie浏览器不支持此属性值) 3、省略号显示 1text-overflow:clip/ellipsis clip：不显示省略号（…），而是简单的裁切; ellipsis：当对象内文本溢出时，显示省略标记； text-overflow: 属性仅是当单行文本溢出时是否显示省略标记，并不具备其它的样式属性定义 要实现当行文本溢出时产生省略号的效果还需定义： 123456789101112131、容器宽度：width：value；2、强制文本在一行内显示:white-space：nowrap;3、溢出内容为隐藏：overflow：hidden；4、溢出文本显示省略号：text-overflow：ellipsis;拓展：方法21、给当前设置省略号的元素加上&lt;nobr&gt;&lt;/nobr&gt;强制不换行标签2、给当前元素设置overflow：hidden；text-overflow：ellipsis;等属性 day3元素类型分类块状元素(block element) 块状元素在网页中就是以块的形式显示，所谓块状就是元素显示为矩形区域，常用的块状元素包括div、dl、dt、dd、ol、ul、fieldset、(h1-h6)、p、form、hr、colgroup、col、table、tr、td等； 默认情况下，块状元素都会占据一行，通俗的说，两个相邻块状元素不会出现并列显示的现象；默认情况下，块状元素按顺序自上而下排列。 块状元素都可以定义自己的宽度和高度。 块状元素一般都作为其他元素的容器，它可以容纳其它内联元素和其它块状元素。我们可以把这种容器比喻为一个盒子。 内联元素或者叫行内元素( inline element ) 常见的内联元素如：a,span,i,em,strong,b等。 内联元素的表现形式是始终以行内逐个进行显示。 内联元素没有自己的形状，不能定义它的宽和高,它显示的宽度、高度只能根据所包含内容的高度和宽度来确定，它的最小内容单元也会呈现矩形形状。 内联元素也会遵循盒模型基本规则，如可以定义padding,border,margin,background等属性，但个别属性值不能正确显示。 内联块状元素(行内块)内联块状元素（inline-block）就是同时具备内联元素、块状元素的特点，&lt;img&gt;、&lt;input&gt;、&lt;textarea&gt;标签就是这种内联块状标签。 inline-block元素特点： 和其他元素都在一行上。 元素的高度、宽度、行高以及顶和底边距都可设置。 可变元素需要根据上下文关系确定该元素是块元素或者内联元素。 元素类型的转换盒子模型可通过display属性来改变默认的显示类型 display属性与属性值 (18个属性值) 属性值：block/inline/inline-block/none/list-item 作用：块状元素和内联元素之间的转换。 说明：各属性值的作用 Block块状显示：类似在元素后面添加换行符，也就是说其他元素不能在其后面并列显示。或者就是让元素竖排显示。 inline内联显示：在元素后面删除换行符，多个元素可以在一行内并列显示。或者就是让元素横排显示。 当元素设置了float属性后，就相当于该元素具备块状元素显示的特点. Inline-block行内块元素显示：元素的内容以块状显示，行内的其他元素显示在同一行。 none 此元素不会被显示。 list-item:将元素转换成列表。li的默认类型。 A、大部分块元素display属性值默认为block，其中列表的默认值为list-litem。 B、大部分内联元素的display属性值默认为inline，其中img、input默认为inline-block。 注意：行内块元素不能转换成内联元素 元素垂直居中置换和非置换元素的概念网页中有类特殊的元素：如img|input|select|textarea|button等，他们被称为可置换元素。他们区别一般inline元素这些元素拥有内在尺寸,他们可以设置width/height属性。他们的性质同设置了display:inline-block的元素一致。 置换元素，W3C中给出了定义： 置换元素主要是指 img, input, textarea, select等这类默认就有 CSS 格式化外表范围的元素。进而可知，非置换元素就是除了 img, input, textarea, select等置换元素以外的元素。 ​ a) 置换元素：浏览器根据元素的标签和属性，来决定元素的具体显示内容。且元素本身一般拥有固有尺寸（宽度，高度，宽高比）的元素，被称之为置换元素。例如：浏览器会根据&lt;img&gt;标签的src属性的值来读取图片信息并显示出来，而如果查看(x)html代码，则看不到图片的实际内容；&lt;input&gt;标签的type属性来决定是显示输入框，还是单选按钮等。html中的&lt;img&gt;、&lt;input&gt;、&lt;textarea&gt;、&lt;select&gt;、都是置换元素。 置换元素在其显示中生成了框，这也就是有的内联元素能够设置宽高的原因。 ​ b) 非置换元素：html 的大多数元素是非置换元素，即其内容直接表现给用户端。 day4定位初识元素的定位属性元素的定位属性主要包括定位模式和边偏移两部分。 边偏移 在CSS中，通过边偏移属性top、bottom、left或right，来精确定义定位元素的位置，其取值为不同单位的数值或百分比。具体解释如下表所示： | 边偏移属性 | 描述 || ———- | ———————————————- || top | 顶端偏移量，定义元素相对于其父元素上边线的距离 || bottom | 底部偏移量，定义元素相对于其父元素下边线的距离 || left | 左侧偏移量，定义元素相对于其父元素左边线的距离 || right | 右侧偏移量，定义元素相对于其父元素右边线的距离 | 定位模式 在CSS中，position属性用于定义元素的定位模式，其基本语法格式如下： 选择器{position:属性值;} position属性的常用值 | 值 | 描述 || ——– | ———————————————— || static | 自动定位（默认定位方式） || relative | 相对定位，相对于其原文档流的位置进行定位 || absolute | 绝对定位，相对于其上一个已经定位的父元素进行定位 || fixed | 固定定位，相对于浏览器窗口进行定位 | 静态定位 static (普遍型)静态定位是所有元素的默认定位方式，当position属性的取值为static时，可以将元素定位于静态位置。 所谓静态位置就是各个元素在HTML文档流中默认的位置。 上面的话翻译成白话： 就是网页中所有元素都默认的是静态定位哦！ 其实就是标准流的特性。 在静态定位状态下，无法通过边偏移属性（top、bottom、left或right）来改变元素的位置。 相对定位 relative (自恋型)相对定位是将元素相对于它在标准流中的位置进行定位，当position属性的取值为relative时，可以将元素定位于相对位置。 对元素设置相对定位后，可以通过边偏移属性改变元素的位置，但是它在文档流中的位置仍然保留，而且移动的位置是相对于自身原来的位置来说的。 注意：相对定位最重要的一点是，它可以通过边偏移移动位置，但是原来的所占的位置，继续占有,移动的距离，是按照原来的自身的位置来移动 就是说，相对定位的盒子仍在标准流中，它后面的盒子仍以标准流方式对待它。 绝对定位 absolute (拼爹型)[注意] ：如果文档可滚动，绝对定位元素会随着它滚动，因为元素最终会相对于正常流的某一部分定位。 当position属性的取值为absolute时，可以将元素的定位模式设置为绝对定位。 注意： 绝对定位最重要的一点是，它可以通过边偏移移动位置，但是它完全脱标，完全不占位置 父级没有定位时以浏览器为准如果所有父元素都没有定位，以浏览器为准对齐 父级有定位以父级为准绝对定位是将元素依据最近的已经定位（绝对、固定或相对定位）的父元素（祖先）进行定位。 绝对定位的盒子没有边偏移如果只是给盒子指定了 定位，但是没有给与边偏移，则该盒子以标准流来显示排序，和上一个盒子的底边对齐，但是不占有位置。 子绝父相这句话的意思是子级是绝对定位的话， 父级要用相对定位。 绝对定位是将元素依据最近的已经定位（绝对、固定或相对定位）的父元素（祖先）进行定位。就是说， 子级是绝对定位，父亲只要是定位即可（不管父亲是绝对定位还是相对定位，甚至是固定定位都可以），就是说， 子绝父绝，子绝父相都是正确的。 但是因为子级是绝对定位，不会占有位置， 可以放到父盒子里面的任何一个地方。父盒子布局时，需要占有位置，因此父亲只能是 相对定位. 固定定位 fixed (认死理型)定位是绝对定位的一种特殊形式，它以浏览器窗口作为参照物来定义网页元素。当position属性的取值为fixed时，即可将元素的定位模式设置为固定定位。 当对元素设置固定定位后，它将脱离标准文档流的控制，始终依据浏览器窗口来定义自己的显示位置。不管浏览器滚动条如何滚动也不管浏览器窗口的大小如何变化，该元素都会始终显示在浏览器窗口的固定位置。 固定定位有两点： 固定定位的元素跟父亲没有任何关系，只认浏览器。 固定定位完全脱标，不占有位置，不随着滚动条滚动。 四种定位总结 定位模式 是否脱标占有位置 是否可以使用边偏移 移动位置基准 静态static 不脱标，正常模式 不可以 正常模式 相对定位relative 不脱标，占有位置 可以 相对自身位置移动 绝对定位absolute 完全脱标，不占有位置 可以 相对于定位父级移动位置 固定定位fixed 完全脱标，不占有位置 可以 相对于浏览器移动位置 叠放次序（z-index）当对多个元素同时设置定位时，定位元素之间有可能会发生重叠。 在 css 中 要想调整重叠定位元素的堆叠顺序，可以对定位元素应用z-index层叠等级属性，其取值可为正整数、负整数和0。 比如： z-index: 2; 注意： z-index的默认属性值是0，取值越大，定位元素在层叠元素中越居上。 如果取值相同，则根据书写顺序，后来居上(最后写的优先显示在上层)。 后面数字一定不能加单位。 只有相对定位，绝对定位，固定定位有此属性，其余标准流，浮动，静态定位都无此属性，亦不可指定此属性。 包含块的概念及作用包含块是绝对定位的基础，包含块就是为绝对定位元素提供坐标，偏移和显示范围的参照物，即确定绝对定位的偏移起点和百分比 长度的参考； 默认状态下，body是一个大的包含块，所有绝对定位的元素都是根据窗口来定自己所处的位置和百分比大小的显示的，如果我们定义了包含元素为包含元素块以后，对于被包含的绝对定位元素来说，就会根据最接近的具有定位功能的上级包含元素来定位自己的显示位置。 定义元素为包含块：给绝对定位元素的父元素添加声明position：relative； 如果我们的父素设置了position:absolute;那么子元素也会相对父元素来定义自己的位置。 锚点链接的语法和应用场景定义： 是网页制作中超级链接的一种，又叫命名锚记。命名锚记像一个迅速定位器一样是一种页面内的超级链接，运用相当普遍。 命名锚点的作用：在同一页面内的不同位置进行跳转。 制作锚标记： 1)给元素定义命名锚记名 语法：&lt;标记 id=&quot;命名锚记名&quot;&gt; &lt;/标记&gt;2)命名锚记连接 语法：&lt;a href=&quot;#命名锚记名称&quot;&gt;&lt;/a&gt; 透明写法IE浏览器写法：filter:alpha(opacity=value);取值范围 1-100 兼容其他浏览器写法：opacity:0.value; value 的取值范围 0-1 ( 0.1,0.2,0.3 —– 0.9 — 1 ) marquee (滚动字幕)滚动字幕的应用： 12345 &lt;marquee behavior（行为）="scroll(滚动)/alternate（晃动）"direction（方向）="up(从下向上)/down（从上向下）/left（从右向左）/right（从左向右）" scrollamount（滚动速度）="value"height="value(上下滚动范围)"width=""(左右滚动范围)&gt;内容&lt;/marquee&gt; 补充： 在父元素没有定位的情况下，是相对于body进行定位的。 在父元素有定位（absolute、relative）的情况下，是相对于父元素进行定位的。 子绝父相-&gt; 子元素绝对定位，父元素相对定位。 由于给了定位的元素完全脱离标准流，也就是说不再占位。所以如果父元素给了绝对定位，会印象后边的元素的布局，所以如果想要子元素相对于父元素定位，那么最好给父元素一个相对定位。（子绝父相的由来） 给了定位模式（absolute）的元素，如果不给边偏移，它会完全脱离标准流，不占位，后边的元素跑上来，但是看到的是给了定位的元素。 给了绝对定位或者固定定位的元素，自动隐式转换为行内块的类型。 所有的元素类型都可以给定位。 拓展\bug\巴啦啦 行内块元素不能转换成内联元素。 在浏览器中加载图片的过程中，图片底部和div之间会有几个像素的距离。vertical-align: buttom; float 可以隐式转换为行内元素。 css鼠标的样式 1234cursuer: pointer; //小手样式curser: default; //三角形curser: wait; //转圈圈curser: help; //帮助？ 在父元素没有定位的情况下，是相对于body进行定位的。 在父元素有定位（absolute、relative）的情况下，是相对于父元素进行定位的。 子绝父相-&gt; 子元素绝对定位，父元素相对定位。 由于给了定位的元素完全脱离标准流，也就是说不再占位。所以如果父元素给了绝对定位，会印象后边的元素的布局，所以如果想要子元素相对于父元素定位，那么最好给父元素一个相对定位。（子绝父相的由来） 给了定位模式（absolute）的元素，如果不给边偏移，它会完全脱离标准流，不占位，后边的元素跑上来，但是看到的是给了定位的元素。 给了绝对定位或者固定定位的元素，自动隐式转换为行内块的类型。 所有的元素类型都可以给定位。]]></content>
      <categories>
        <category>大前端</category>
      </categories>
      <tags>
        <tag>html5</tag>
        <tag>css3</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[记录我的大前端修行1.1]]></title>
    <url>%2F2019%2F03%2F19%2Fh5-1%2F</url>
    <content type="text"><![CDATA[前言：由于是计算机专业，3年多的学习还是打下了一定的编程基础的。C语言可能忘得差不多了，PHP、Python还算拿得上手，加上之前在公司又看了一个多月的PHP，前端的只是虽然接触不多，但是第一周这些基础的课程还是能够自己写的出来的。对于十分基础的只是，在这里我就不写了。较多的还是记录我感兴趣的，或者我没有接触过的知识点，仅供参考和自我总结，谢谢！ day1、2、3初识css拿什么拯救你，我的HTML。 以前写PHP的时候，只是要写一些基本的前端页面，文本框啊、按钮啊、a标签啊之类的，那是必不可能又什么好看的样式的。自己查看没有css的网站时，就会发现html的标签属性使用是比较混乱的，CSS的出现，拯救了混乱的HTML，当让更加拯救了我们web开发者。 让我们的网页更加丰富多彩。 CSS的最大贡献就是： 让 HTML 从样式中解脱苦海， 实现了 HTML 专注去做 结构呈现。 而样式交给 CSS 后，你完全可以放心的早点洗洗睡了！ css简介CSS通常称为CSS样式表或层叠样式表（级联样式表），主要用于设置HTML页面中的文本内容（字体、大小、对齐方式等）、图片的外形（宽高、边框样式、边距等）以及版面的布局等外观显示样式。 CSS以HTML为基础，提供了丰富的功能，如字体、颜色、背景的控制及整体排版等，而且还可以针对不同的浏览器设置不同的样式。 css样式规则略！ 还是放个图吧~~ 样式表的建立和优先级内部样式表123&lt;style type="text/css"&gt; /* css 语句 */&lt;/style&gt; 内联样式(行内样式)1&lt;标签 style=&quot;属性:属性值; 属性:属性值;&quot;&gt;&lt;/标签&gt; 外部样式表 创建 导入 方法一： 语法 1&lt;link rel="stylesheet" type="text/css" href="目标文件的路径及文件名全称" /&gt; 注意： link 是个单标签哦!!! 该语法中，link标签需要放在head头部标签中，并且必须指定link标签的三个属性，具体如下： href：定义所链接外部样式表文件的URL，可以是相对路径，也可以是绝对路径。 type：定义所链接文档的类型，在这里需要指定为“text/css”，表示链接的外部文件为CSS样式表。 rel：定义当前文档与被链接文档之间的关系，在这里需要指定为“stylesheet”，表示被链接的文档是一个样式表文件。 方法二： 语法 123&lt;style type=&quot;text/css&quot;&gt;@import url(目标文件的路径及文件名全称);&lt;/style&gt; css 常用选择符(选择器)要想将CSS样式应用于特定的HTML元素，首先需要找到该目标元素。在CSS中，执行这一任务的样式规则部分被称为选择器（选择符）。 标签(元素)选择器标签选择器是指用HTML标签名称作为选择器，按标签名称分类，为页面中某一类标签指定统一的CSS样式。其基本语法格式如下： 12标签名&#123;属性1:属性值1; 属性2:属性值2; 属性3:属性值3; &#125; 或者 元素名&#123;属性1:属性值1; 属性2:属性值2; 属性3:属性值3; &#125; id 选择器使用 # 进行标识 后面紧跟 id 名字 1#id名&#123;属性1:属性值1; 属性2:属性值2; 属性3:属性值3; &#125; 说明 A）当我们使用id选择符时，应该为每个元素定义一个id属性 如：&lt;div id=&quot;div1&quot;&gt;&lt;/div&gt; B）id选择符的语法格式是“#”加上自定义的id名 如：#box{width:300px; height:300px;} C) 起名时要取英文名，不能用关键字：(所有的标记和属性都是关键字) 如：head标记 D）一个id名称只能对应文档中一个具体的元素对象，因为id只能定义页面中某一个唯一的元素对象。 E) 最大的用处：创建网页的外围结构。 类(class)选择器类选择器使用“.”（英文点号）进行标识，后面紧跟类名，其基本语法格式如下： 123.类名&#123;属性1:属性值1; 属性2:属性值2; 属性3:属性值3; &#125; 标签调用的时候用 class=“类名” 即可。 类选择器最大的优势是可以为元素对象定义单独或相同的样式。 id 选择器和类选择器的区别W3C标准规定，在同一个页面内，不允许有相同名字的id对象出现，但是允许相同名字的class。 类选择器（class） 好比人的名字， 是可以多次重复使用的， 比如 张伟 王伟 李伟 李娜 id选择器 好比人的身份证号码， 全中国是唯一的， 不得重复。 只能使用一次。 群组选择器我们可以给标签指定多个类名，从而达到更多的选择目的。 注意： 样式显示效果跟HTML元素中的类名先后顺序没有关系,受css样式书写的上下顺序有关。 各个类名中间用空格隔开。 多类名选择器在后期布局比较复杂的情况下，还是较多使用的。 群组选择器语法：选择符1，选择符2，选择符3{属性：属性值;} 说明：当有多个选择符应用相同的样式时，可以将选择符用“，”分隔的方式，合并为一组。 通配符选择器通配符选择器用“*”号表示，他是所有选择器中作用范围最广的，能匹配页面中所有的元素。其基本语法格式如下： 1*&#123;属性1:属性值1; 属性2:属性值2; 属性3:属性值3; &#125; 伪类选择器伪类可以用于文档状态的改变、动态的事件等，例如用户的鼠标点击某个元素、未被访问的链接。 语法： a:link{属性:属性值;} 超链接的初始状态 a:visited{属性:属性值;} 超链接被访问后的状态 a:hover{属性:属性值;} 鼠标划过超链接时的状态 a:active{属性:属性值;} 鼠标按下时超链接的状态 要按照 :link –&gt; :visited –&gt; :hover –&gt; :active 的顺序。 错误的顺序有时会使超链接的样式失效 记忆口诀： lv 包包， hao 包含选择器语法：选择符1 选择符2{属性：属性值;} 说明： 选择符1和选择符2用空格隔开，含义就是选择符1中包含的所有选择符2; 用法：当我的元素存在父级元素的时候，我要改变自己本身的样式，可以不另加选择符，直接用包含选择器的方式解决。 权重123456789101112131415css中用四位数字表示权重，权重的表达方式如：0，0，0，0 类型选择符的权重为0001 class选择符的权重为0010 id选择符的权重为0100 伪类选择符的权重为0010 包含选择符的权重：为包含选择符的权中之和 内联样式的权重为1000 内联样式的权重为1000继承样式的权重为0000 当不同选择符的样式设置有冲突的时候，高权重选择 符的样式会覆盖低权重选择符的样式。 例如：b .demo的权重是1+10=11 .demo的权重是10 所以经常会发生.demo的样式失效 相同权重的选择符，样式遵循就近原则：哪个选择符最后定义，就采用哪个选择符样式。（注意：是css样式中定义该选择符的先后，而不是html中使用先后） day4拓展\补充\巴啦啦css书写方式1、 内部样式表：&lt;style&gt;&lt;/style&gt; style标签放在head标签里面，卸载上边是因为代码从上往下执行，为了优先加载样式 2、 外部样式表：link href=”css文件路径” type=”text/css” rel=”stylesheet” 3、 行内样式表 css属性 style=”” “”里面不加{} 属性名:属性值; @charset “utf-8”; 一定加分号; css样式表优先级行内样式表 优先级最高 外部样式表和内部样式表的优先级根据书写决定，后边的把前边的覆盖了，覆盖的是已经有的属性，没有的属性会叠加上去并且生效。 ！！！bgcolor 是HTML里面的属性，不适用css 想要某一类元素有特有的属性 h1、P、div等这些HTML里面有的标签，都叫做元素（标签）选择器在什么情况下使用：所有的这个元素都要有这个属性的情况下 类选择器：.类名 想要某些元素有特定的属性 id选择器：不能重复，一个id只能有一个。 多类名选择器：class=”类名1 类名2” 群组选择器：个选择器之间用 , （英文状态下的逗号）隔开 包含选择器，是选择器的名称加空格，后面再跟上你要选择的元素 float：浮动 让竖着排列的元素 横向排列]]></content>
      <categories>
        <category>大前端</category>
      </categories>
      <tags>
        <tag>html5</tag>
        <tag>css3</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[记录我的大前端修行1.0-启程计划]]></title>
    <url>%2F2019%2F03%2F19%2Frecord-h5%2F</url>
    <content type="text"><![CDATA[上回说到准备去培训公司学习H5大前端，其实到今天已经上了快两周的课程了。 本打算每天都记录下所学的知识和心得的，没曾想早九晚九学习完回到家，是真的连电脑都不想碰一下。 渴望过充实的生活，现在充实就实实在在的摆在眼前。 后来想了一下，还是每周写一篇blog总结一下吧，总共20周的培训时间，写下来20篇也差不多。不然每天都写，一是时间上太赶，我又是个写文章很墨迹的人，总是想扯一点其他的东西，写不到点子上去，二是每天都写算了下，怕是要写个100来多篇哦，不了不了，这伤身体键盘。 总而言之，言而总之。记录H5大前端的学习历程的小计划，就开始逐步实现起来了。 虽然恐怕单怕就怕，到了后期2、3阶段，忙起来真的没有时间精力来记录…莫怪~莫怪~]]></content>
      <categories>
        <category>大前端</category>
      </categories>
      <tags>
        <tag>html5</tag>
        <tag>css3</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[我的转折点？]]></title>
    <url>%2F2019%2F03%2F18%2Fturningpoint-5%2F</url>
    <content type="text"><![CDATA[PHP是世界上最好的语言 我始终承认并绝不会反驳这句公认的言论，我也曾一度觉得PHP挺有意思，并认真跟着老师学习了解这门语言，也写了一些有趣的东西。 一直觉得自己是个喜新不厌旧的人，但估计骨子里还是透着喜新厌旧的情愫。 大三的暑假，因为临近毕业，开始思考怎么做毕业设计的事情。没有一点头绪，无头苍蝇样的在网上搜索着各种各种的项目，期待着灵感的涌现。然而现实是灵感没有丝毫的动静，网页上的广告倒是涌现了一大推。 应该是有一条“自学Python巴拉巴拉巴拉”的广告吧 忽然想到，那段时间看求职信息，倒是有很多公司招人的要求上有写：熟悉Python。 确实，Python是一门最近真的很火的语言，优点就在这儿不一一列举了。入门很简单倒是事实。于是那个暑假，我家都没回，在学校偷偷摸摸的住了一个多月，自学Python。 我并不是一个自学能力多强的人，这个词嘴上说着容易，但是没有人引导，单纯是跟着网上的那些教程学习的话，估计也就只是入个门罢了。一个多月倒是有收获，不过用我所学的那点东西，东西开发一个项目还是力所不及的。 到大四综合实训，倒是有成天的时间坐在教室里做项目。把买了将近一年的域名捡起来，自己又买了服务器，一个月时间，用Python Django框架搭了自己博客。本以为拿着它再添一点功能，做个毕业设计应该能行了。 项目都接近尾声了，文章放了一大推，都开始构思还能往自己博客里面放一些什么功能的时候，导师来了一句“毕业设计还是要跟自己专业挂钩哦~” boom~~原地究极阿姆斯特朗螺旋爆炸！ 我，物联网工程专业，跟专业挂钩，意思是，我得加上硬件。那么请告诉我，我一个个人博客系统怎么加硬件，拿头加？ 罢了~罢了~博客功能也就不加了，把功能完善就部署上线了，做综合实训的项目设计还是绰绰有余的。 现在域名也到期了，服务器也到期了，我又可以大声喊出那句“ikaros停运！” 可惜！！！图都没有了，只在写得系统设计与分析的文档里找到当时画的设计图…可惜，真是可惜。 不好意思，我又跑题了。 虽然Python学的半灌水，但是好像也不是想的那么不堪，导师提醒毕设要和专业挂钩后，我立马一转攻势，在网上看了两天的资料，转天就买了《物联网Python开发实战》。你要战，我便战！ 抱着书啃了三四天，书上倒是有一个项目“智能灌溉系统”，嗯~有点意思。硬件需求，树莓派、arduino、杜邦线若干、传感器若干等等等等，嗯~买买买。别忙还有前端界面，嗯~cool~，前端的源码呢？倒是有个githup的地址，打开一看，这全是后端的代码啊，还有硬件里面的源码，说好的前端的界面呢，总不能让我自己写吧，html、css、js这谁顶得住啊！不了不了，这伤身体。 我TMD又不是全栈！ 随后又在网上找了很多项目，最后还是决定单纯的结合树莓派控制摄像头往前端拍照片吧。思路还是比较简单，写起来倒也上手，转手就买了树莓派，两天写了个用树莓派往七牛云服务器里发送定时拍的照片，easy！ 然后，卡住、、、 我的毕设总不能用七牛云做服务器吧，那工作量也太少了吧，我在树莓派里可能就写了100多行代码… 卡卡卡卡，一直卡住。 然后综合实训也结束了，秋招马上要到了，大家都开始忙着找工作了。随波逐流的，我也开始寻觅自己的工作。 最后还是决定找Python方面的工作，一是希望可以在工作中学到点自学学不到的东西，然后帮助完成我的毕设，毕竟，毕业要紧。二来Python倒是个不错的发展方向，现在Ai人工智能炒得这么火，指不定哪天就发达了呢？梦想还是要有的。 最后是，150多家公司来校招，只有4、5个Python岗位。我寻思这是打发叫花子呢？不过我整个人，决定了的事就不会再变了，说找Python我就要Python。 投了4家公司，只有两家有音讯，一家在河北，一面的时候我为了第一印象能好点，问我能否愿意去河南发展，那当然是愿意啦！河南那么好，实习工作还能开5000，还是大数据挖掘，哇简直不得了！另外一家，是川大教授开的公司，做网络安全方向系统的，听起来也不错。 然后，和家里通电话，“河南好远哦，回家好麻烦，人生地不熟的，碰到人贩子怎么办” 得，那就去川大那家公司看看吧，第二天河南那边还和我打电话喊我电话面试，还说想和我聊聊技术，结果被我一句我不想去河南给回绝了。我咋就这么傲呢？ 然后就是，川大公司的笔试，二面，三面，入职。 来了，来了，划重点，我要点题了。 某某顶点公司，我通过Python面试，拿到Offer上面写着Linux研发工程师实习生，拖了我两个月让我年后入职，上班在公司喊我看了一个多月的PHP。 人生总是起起落落落落落落落落落… 说好的Python呢？Linux我也行啊，写网站部署上线的时候也倒腾了几个月的Linux吧，PHP是啥？是嘛，我理解你们的客户端后端系统用PHP写是没有错的，但是能告诉我为啥用的这么老版本的PHP，进公司没两天就然我把mysql改成mysqli。嚯嚯嚯，9102年了…… 对不起，我不该吐槽的。 反正就是，我越做越觉得，我的毕设完了，糟了我可能比不了业了，妈妈救我。 然后就是一个机缘巧合，我顺利辞职了，再见川大，可能再也吃不到食堂4.4二荤的饭了。 经过将近一周的思想挣扎，反思，我这段时间到底干了什么，我以后要做什么，我的出路在哪里，我是不是应该放下一切，痛定思痛做出一些改变，去学习一门新的技术语言。 大道理在脑子里过了千万遍。 成了！到朋友那家培训公司学前端吧，后端可能真的不适合我。 至此，我没有鄙视任何计算机语言，我只是单纯的认为前端是我想要的，是我能够放下一切，不顾一切的去学习的新的知识。 我也将在这个新开的博客里，写下每周学的心得和感想。 愿五个月毕业后，能够功成名就。 ikaros加油！]]></content>
      <categories>
        <category>日常</category>
      </categories>
      <tags>
        <tag>develop</tag>
        <tag>work</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[致力于此，身体力行]]></title>
    <url>%2F2019%2F03%2F04%2Ftroble-4%2F</url>
    <content type="text"><![CDATA[博客开了有几天了，本打算先搬过来以前写的技术向干货，再记录一下第一次上班的学习心得和笔记。 但是… 过完年回到成都，到去公司上班，到四天憋出来毕业论文初稿，这段时间，中间一直一直一直穿插着令人着迷又焦灼又向往又苦恼又期盼又失落又令人着迷的个人感情问题。 她不是我的初恋，但我却拿出比初恋多10倍的心思，穷尽了所有去爱。 有时候我也会问自己，她就是那个“对”的人吗？答案是肯定的，我觉得是。 那什么是对？什么又是不对？哪有什么天生一对，从喜欢走到爱情，不就是把彼此的不合拍磨合了吗？ 有很多话不想放到这里来讲，但是憋在心里特别难受。所以容我矫情一次。 我有点疼，但是我还能忍。（写到这儿刚好歌单跳到薛之谦的《天分》） 想得太多，想写的太多，以至于不知从何写起。先分割一下，整理下思绪。 曾今问过一个很有智慧的朋友：我失恋了很难受怎么办？ 朋友反问我：你为什么难受？ 我说：分手了就是很难受啊，我很想他…… 朋友只是淡淡的说：一般来说，失恋后低落是因为空虚，时间突然空出来了，填满就好了。 这句话轻描淡写，但我一下子就醒悟了。 人在闲的时候就是容易胡思乱想，越想越难受，还钻牛角尖。 我们要学会独处，一个人的时候，可以去公园溜达，健身，看书，做菜等等，让自己充实。 当你从自己玩的过程中获取到快乐，就会知道一个人也可以很好。当你知道一个人也可以很好的时候，就已经走出失恋了。 摘抄自知乎，对没错又是知乎。我其实可以直接放图的，但是我选择把它一个字一个字打出来，因为有很多话，要一个字一个字刻在心里，不然久了会忘记。 其实还好吧，我这还说不上失恋，至少我是这么认为的。 失恋的人，应该是绝望&gt;希望，我现在应该希望多于绝望吧，至少我这么认为的。 她说她最近很丧，她说她要把前任忘掉，她说等她好起来。 她说我为什么不早一点出现。 她喜欢问我为什么喜欢她，问我喜欢她什么。 她后面一直说我是笨蛋。 她说我只是被冲昏了头脑。 她最近和我说的话变少了。 她最近不会和我说话了。 3月2号晚上，还是3月3号凌晨？反正差不多那个时候。在她房间里，把我们想说的说了，把我想问的问了。其实还有很多想说的我没有说，很多想问的并没有问，我怕问过之后，往后就没得问了。最后得到一个“存档”的结果。还是在我要求今晚必须要有个结果下得出的。 是啊，存档。字面上像是《爱情公寓》里，关谷神奇和唐悠悠之间的存档。但他们那时存的吵架时候的档，存档期间一样是情侣吧。而到我这儿的存档，存的是感情的档，存档期间行同路人，连说话都是奢侈的。 其实我很不相信感情，能存放在哪儿，等时候到了拿出来再用。菜放冰箱里还要用保鲜膜封上呢，何况这感情，我连话都插不上，每天能做的只是帮她烧一下热水袋，早上起床上班前在她房里坐10分钟，我拿什么去维护我们那短短的精贵的感情。 我怕，我怕到时候我们读档的时候已经变了味儿了。或者根本就拿不出来了。或许一辈子都读不了档。 我和一个有女朋友的朋友讲，我在存档。他说：这还能存档啊？理解不了。 我和一个单身朋友讲，我在存档。他说：你这不是备胎吗？我当时就想反驳他，但是仔细想想，好像也有这么个意思。但，是不是又如何呢，我还不是心甘情愿的等。 对不起，以上的话可能说的有点过分了，但是我觉得说出来写出来，比较好受一些。对于上面的一切言论，我全权拥有吃了吐的权利，并且随时可以吃了吐。 再分割一下，思维窃取了。 嘛~终于回想起自己写的标题了。之前有点跑偏了。 致力于此，身体力行。 如同我上一篇转载的博客，这是我人生中必定会经历的过程，我应该选择坦然面对它。 哇，说起来好轻松啊，我他妈自己都不信。 但，我会加油。既然要等，那就不能在这期间让自己退步，如果到了那一天，希望能给她一个更好的自己。 今天在公司废了一天了，明天一定要拿起我该学习的，下个月完成自己的在学校就定下但一直没有实现的小目标。 还是那一句话。 期待与你的再次相遇。 –END–]]></content>
      <categories>
        <category>日常</category>
      </categories>
      <tags>
        <tag>thoughts</tag>
        <tag>emotion</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[如何快速走出失恋]]></title>
    <url>%2F2019%2F03%2F04%2Fshilian%2F</url>
    <content type="text"><![CDATA[去享受、不逃避、直面人生的每个阶段、每段经历， 是很难的。 这是一句旁观者说出简单，而当局者明白也难以做到的话。 你只可以经历它的洗刷。 你可以恨，大吐苦水，如何付出，如何冷漠，如何过分，如何有恃无恐。 你可以找来亲朋好友，逐一分析，逐一抚慰，逐一申诉，说着说着，你觉得你好像自己明白了很多。 你可以原谅，可以理智地接受人心难测，现实难违，时机不对，暗暗下定心思不去想，顺其自然，平常心。你可以像一个喋喋不休的病人一样，找回那些朋友，说你想通了，其实不怪谁，其实不过是运气不好，其实他的不好你都不恨，你现在想通了。 然后晚上睡觉，一些你识别不清的鬼魅抓着你的心往下堕去，早上醒来，你还没清醒，就像被痛苦紧紧攥着，被打了几枪，你的心还是痛。 你可以否定他，连同着早就为你咬牙切齿的朋友，一起去认识自己当初是多么的傻，去看清对方是一个怎样不值得的人，性格中有多少瑕疵，相比之下自己是多么优秀。 你可以放纵自己去犯贱，去找对方，去伤到尽头，去穷尽你所能想到的一切办法，去让自己彻底死心。 你可以声色犬马，放纵自己，找来代替，搂搂抱抱哭哭啼啼。 这些方法，一二三四，有些会让你暂时舒缓，有些会让你感到更糟。然后，夜幕降临，太阳升起，你会发现一切事情，于事无补。 你还是痛苦，还是悲伤，还是孤独，还是满脑子都是对方。 我为什么要说那么令人绝望的事情？因为这是事实，而且，还有一个事实是，你越快走出来，你以后只会摔得越重。 失恋是，你的情感不受控制，完全战胜了理性的一个时期，其实你做些什么，你自己能感受到的正面作用很少。时间过得凌迟般的慢，但是的的确确的，很慢很慢地，你会觉得，好些了。 可能两个礼拜后，你开始可以睡着；差不多一个月，你可以真正地重现投入到工作里；两个月，你慢慢开始恢复对异性的感觉了， 不再时时刻刻拿前任来和遇到的所有人对比了。 很漫长是不是，但这是有利于你的。真的，听着，这有利于你。 无论你是甩人，还是被甩，如果你很快地又爱上了谁，完全不去细想刚刚结束的这段失败的恋情，那只是为日后的更大的痛苦做铺垫罢了。无论你是甩人，还是被甩，否定对方当然有利于你，让你觉得自己没失去什么，让你感到自己是正确的一方，让你舒服。 但注意了，假如你一心想着跳过这个阶段，这样，你一点成长都不会有。准备好几年后，你再来恍然大悟，一切过往在你脑内全部忽然海啸把你淹没，你就会知道你从前，一次次，对的，一次次，重重复复犯着同一个错误，而且错过了无数你找不回来的良机。 好，那么，不去快速熬过这个失恋期，究竟要做什么？ 不要再找对方了。 一开始，爱想啥，想啥，没什么羞耻的。想对方，想，幻想新欢，想，想天想地尽管想好了。你会想对方，不是因为你输了，是因为你当初的投入。「对方一点都没有想你」、「只有你一个在傻乎乎地想」，这是正常的，因为对方没你投入，投入错吗，投入挺好的。你当初的快乐也许很大在于你投入的这份珍惜，不在于对方的素质与态度，而你懂得珍惜，你永远会快乐。 反思，分析，没完没了地，直到你完全想清楚了。你要去完完全全分析之前那段感情的自己，那段感情里的他，各种因素，每个行为。你一开始也许是为了好受，会想到对方的坏多一点，想到自己的不好，会内疚难受得又想找回对方。 没关系，承认事实，反复了，再重来。很多结论，得出了之后，过几天你又会忘记，重新迷惑，重新痛苦，又进入胡同。而且甚至每次得出的结论都不一样。没关系，一次次地想，想到自己觉得得到结论，又一次想通为止。有些结论你会过几天推翻，有些结论最终在你多次回想之后，你会确信。但是只要你一直坚持去想，去分析，而不是糊弄自己、浑浑噩噩，行尸走肉的你，心中会越来越明白，越来越接近那个自己不愿意接受的事实。 你现在不一定完全好了，但你已经好多了，反复少了。给些时间自己消化事实吧。你明白了很多很多道理。你是如此幼稚、对方是如此幼稚你却一头扎进去、从对方的不珍惜感受到自己从前是多么不懂珍惜、自己真正想要怎样的人、感情中有什么一触即炸的雷区、自己相比对方的优／缺点。你手握一大堆，让你成长的事实。 这段时间可以尝试突破一下自己的边界。失恋，痛苦得很，可以趁机去将自己的生活走大一点。实际上，失恋的这段日子，是我最神奇而丰富的一段日子： 我因为难受，比日常更放得开，我认识了很多新朋友，很多生活以外的圈子的朋友：服装设计师、派对DJ、化妆师、创客、策展人、发型设计师等等。视野不能说没有拓宽。 马上开始了本来搁置的计划。 因为寻求帮助和听取意见而了解了以前很多自己逃避的关于自己的真相、别人的真实想法、两性的真实想法。重新认识了自己。 我去见识了很多以前没见识过的场面，一夜间海掷金钱的赌局、朋友的电子party、环城单车行、出席以前不敢出席的时装周等等。 着实地去变得更好，更多运动、更多反省、更多提升、更多打扮，而不去SNS刻意表现自己变得很好。 不要做什么？ 你日后会觉得自己廉价的任何放纵。 将对方塑造成一无可取的人麻痹自己。 自哀自怜。 决心从此不再投入、不再认真，成为刺猬。因为爱没错，只是对象、时间或方法错了。 强迫自己不想，逃避难过的感觉。 在公开场合、SNS呈现比实际上好的假象。 找对方的朋友。 如果看到这个答案的你，此刻正因为失去一段感情而痛不欲生，HEY朋友，我也仍然处在这个阶段之中呢，不过现在回想过去这段时间，真的是近年来我成长得最快的日子了。此时此刻的我，不敢说，我又懂了很多，爱与人生，都是需要漫长的领会和学习的吧，我们都需要永远地、不停地学习。加油，你会感谢这段日子的。 作者：匿名用户 链接：https://www.zhihu.com/question/19833746/answer/43351207 来源：知乎]]></content>
      <categories>
        <category>日常</category>
        <category>转载</category>
      </categories>
      <tags>
        <tag>share</tag>
        <tag>thoughts</tag>
        <tag>emotion</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[基于Nginx和Gunicorn自动化部署Django博客网站（心得教程）]]></title>
    <url>%2F2019%2F02%2F28%2FNginx-Gunicorn%2F</url>
    <content type="text"><![CDATA[基于Nginx和Gunicorn自动化部署Django博客网站（心得教程）阅前叨逼叨众所周知，基于PHP的网站部署到服务器上，目前有很多一站式的Web管理，比如：宝塔Linux，一键创建网站、FTP、数据库，连免费的SSL能帮你做好了，一键打上证书，成了！简直不要太方便！可我偏偏就选择了用Python+Django来做这个博客，当准备往服务器上部署的时候，各种各样的坑就来了。最后网站倒是上线了，只是感觉头顶凉飕飕的… 首要的准备在这里我们准备使用当下较为流行的Nginx+Gunicorn方式来把我们的Django博客部署到服务器上，然后通过域名来访问我们的网站。 （提取关键词）服务器、域名，这便是我们做这项工作的首要准备： 一台可以通过外网访问的服务器。 一个自己的域名（最好备过案，没有备案也无伤大雅）。 一颗勇敢的心，遇坑不要怕，你遇到的坑99.9%网上都能够找到答案。 下面介绍一下这三点准备： 服务器现在阿里云、腾讯云都在大力发展这方面的服务，全民建站嘛。而如果你是学生，那么9.9包月不是梦，我购买的：轻量型应用服务器(刚看了一下，已经9.5了)，1核2G、5M带宽、40G系统SSG盘，对于个人网站已经是绰绰有余了。简简单单的购买成功后，推荐安装系统镜像 Ubuntu 16.04，当然CentOS也能够使用Nginx + Gunicorn来完成部署，只不过系统命令有一些不同，如又需要可以自行研究。本心得教程完全基于Ubuntu 16.04。 阿里云、腾讯云其他的服务器土豪请随意挑选，能够满足您的所有要求。 如果你不是学生，也不是什么什么二代，那么可以购买国外的服务器。有很多很便宜的服务器，我甚至还听说续期不要钱，不过每天都要上服务器使用一次，只要你能坚持…至于如何购买，我就不介绍了，只能说有能力的都买了。这类服务器可能性能就比不上阿里云、腾讯云的，但是你可以用它来搭梯子啊，VPN封的那么厉害，我用SS或者SSR就好了嘛（小声逼逼）。最后系统依旧选择Ubuntu 16.04。 域名购买域名，也就是网域名称系统，是因特网的一项核心服务，它作为可以将域名和IP地址相互映射的一个分布式数据库，能够使人更方便的访问互联网，而不用去记住能够被机器直接读取的IP地址数串。 在我们购买阿里云、腾讯云服务器的时候便能够购买域名，如： 阿里云域名注册系统。我的域名是在购买第一个服务器时加1毛钱送的，第二年续费就的加钱了。有很多很便宜的域名，如果只是为了测试，随便注册一个域名即可，但注意一点根据工信部规定，以下后缀的域名需要实名认证后才能使用： .cn/.com/.net/.top/.xyz/.vip/.club/.ren/.wang/.shop/.xin/.中国/.信息/.公司/.网络/.广东/.佛山 如果你购买的是上述后缀的域名，意味着需要提交个人的身份资料实名认证后才能正常使用，这通常需要花费几天的时间。所以如果只为了测试和学习部署的话，最好避开上述后缀的域名。 搭建服务器前提：本心得教程本地使用Window10为环境，服务器端使用Ubuntu 16.04。 在阿里云购买服务器后，网页自带服务器连接功能，无需使用Xshell等工具连接。但是要连接到服务器首先要进入你的服务器的监控页面，如果嫌麻烦，可下载安装Xshell进行服务器连接。具体操作这里就不赘述了，网上有很多教程能够帮到你。 安装软件连接到服务器后，一般是以root用户登陆的。而为了网站的安全维护，我们一般不选择在root下部署代码。这里我们新建一个用户Django，并将它加入超级用户组： 123456789101112131415#登陆到root用户后，在root用户下新建一个用户，Django是用户名#因为博客是基于Python的Django包搭建的，所以这里就用了Django作为名字#你可以使用自己喜欢的名字，不一定要和我一样root@localhost:~# useradd -m -s /bin/bash django#设置用户的密码#Ubuntu包括CentOS秉承着没有反馈就是最好的反馈，只要没有任何提示，那么你输入的命令就没有问题，不要以为系统什么都没有做#输密码的时候不会有字符显示，不要以为键盘坏了，正常输入即可root@localhost:~# passwd django#切换到新建的用户root@localhost:~# su - django#这时候@符号前面的用户名就换成了djangodjango@localhost:~$ 新用户创建成功后，只是为了能够在新用户的地址下部署代码，不一定非要切换到新用户在执行操作，因为有可能是Ubuntu 16.04的原因，虽然我把django加入到了超级用户组。但是有一些命令执行时任然提示权限不够，我目前还没有找到解决的办法，为了你我能够避开这些坑，以下的操作建议任然在root用户下执行，毕竟Ubuntu认为root才是老大… 下面我们为了避免所使用Ubuntu系统版本太旧而给后面安装软件带来麻烦，我们在使用前先更新一下。运行一下命令： 12root@localhost:~$ sudo apt-get updateroot@localhost:~$ sudo apt-get upgrade 耐心等待一会儿，更新完成后，我们就开始安装需要用到的软件：Nginx、Pytohn3、Git、pip 和 virtualenv。 123root@localhost:~$ root@localhost:~$root@localhost:~$ sudo apt-get install git python3 python3-piproot@localhost:~$ sudo pip3 install virtualenv 解析域名到服务器的IP地址在阿里云服务器的管理控制台，能够直接将你已经购买的域名进行解析，具体操作参阿里云域名解析服务。注意：需要备案的域名，大多数要先备案才能够解析，部分地区除外。 将域名和服务器的 IP 地址绑定后，用户就可以通过在浏览器输入域名来访问服务器了。下图是我的域名和服务器的 IP 地址绑定： 启动Nginx服务Nginx 是用来处理静态文件请求的。比如当我们访问一个博客文章详情页面时，服务器会接收到下面两种请求： 显示文章的详情信息，这些信息通常保存在数据库里，因此需要调用数据库获取数据。 图片、css、js 等存在服务器某个文件夹下的静态文件。 对于前一种请求，博客文章的数据需要借助 Django 从数据库中获取，Nginx 处理不了，它就会把这个请求转发给 Django，让 Django 去处理。而对于后一种静态文件的请求，只需要去这些静态文件所在的文件夹获取，Nginx 就会代为处理，不再麻烦 Django。 用 Django 去获取静态文件是很耗时的，但 Nginx 可以很高效地处理，这就是我们要使用 Nginx 的原因，当然其功能远不止这些。 运行下面的命令来启动我们已经安装的Nginx服务： 1root@localhost:~$ sudo service nginx start 然后我们在浏览器输入域名，当看到下面的界面说明Nginx启动成功了， 代码的部署部署前的项目配置Django 项目中会有一些 CSS、JavaScript 等静态文件，为了能够方便地让 Nginx 处理这些静态文件的请求，我们把项目中的全部静态文件收集到一个统一的目录下，这个目录通常位于 Django 项目的根目录，并且命名为 static。为了完成这些任务，需要在项目的配置文件里做一些必要的配置： 1234567blogproject/settings.py#其他配置STATIC_URL = '/static/'# 加入下面的配置STATIC_ROOT = os.path.join(BASE_DIR, 'static') STATIC_ROOT 指明了静态文件的收集目录，即项目根目录（BASE_DIR）下的 static 文件夹。 为了安全起见，在生产环境下需要关闭 DEBUG 选项以及设置允许访问的域名。打开 settings.py 文件，找到 DEBUG 和 ALLOWED_HOSTS 这两个选项，将它们设置成如下的值： 1234blogproject/settings.pyDEBUG = FalseALLOWED_HOSTS = ['127.0.0.1', 'localhost ', '.ikaros.xin'] ALLOWED_HOSTS 是允许访问的域名列表，127.0.0.1 和 localhost 是本地访问的域名，.ikaros.xin 是访问服务器的域名（这里换成你自己的域名）。域名前加一个点表示允许访问该域名下的子域名，比如 www.ikaros.xin、test.ikaros.xin 等二级域名同样允许访问。如果不加前面的点则只允许访问 ikaros.xin。 项目还会依赖一些第三方 Python 库，为了方便在服务器上一次性安装，我们将全部依赖写入一个叫 requirements.txt 的文本文件中。激活本地的虚拟环境（如果你使用了虚拟环境的话），并进入项目的根目录，运行 pip freeze &gt; requirements.txt 命令，我这里在本地环境win10下使用项目软件Pycharm，在项目终端运行： 12E:\Python\ikarosblog&gt;pip freeze &gt; requirements.txt 这时项目根目录下会生成了一个 requirements.txt 的文本文件，其内容记录了项目的全部依赖。 上传代码到服务器将代码上传到GitHub将代码上传到 GitHub 等代码托管平台，这样我们就可以方便地把代码拉取到服务器了。Git 和 GitHub 的使用相信你已经很熟悉了，这里就不赘述过程。如果不知道如何使用地话可以自行百度相关教程，参考：使用git将项目上传到github（最简单方法） 注意数据库文件不要上传！ 使用FTP上传代码如果实在没有使用过GitHub，或者嫌麻烦，我推荐一种懒人方法–使用WinSCP。 WinSCP是一个Windows环境下使用SSH的开源图形化SFTP客户端。同时支持SCP协议。它的主要功能就是在本地与远程计算机间安全的复制文件。WinSCP也可以链接其他系统,比如Linux系统。 自行百度下载WinSCP客户端，连接你的服务器，成功登陆服务器后，你能够以一种图形化的界面看到你服务器的文件和目录。上传代码也非常简单，直接将本地的代码项目拖到WinSCP下对应的服务器目录里就完成了。 是不是非常简单！同样只是上传代码，WinSCP要比GitHub方便的多。 设置服务器目录结构接下来需要把代码上传到服务器了。我服务器上存放代码的目录结构是这样的： 12345/home/yangxg/ sites/ demo.zmrenwu.com/ env/ django-blog-tutorial/ 一台服务器可能部署多个网站，所有网站代码都放在 sites/ 目录下。ikaros.xin 这个文件夹以网站的域名命名，便于区分。env/ 是 python 虚拟环境目录。ikarosblog/ 是 Django 博客项目目录。 因此先来创建这个目录结构，注意目录名替换为你自己的域名，以后涉及到 ikaros.xin的地方通常都要替换你自己的域名，后面就不再一一指出了，运行下面的命令: 1root@localhost:~$ mkdir -p ~/sites/ikaros.xin 这里 ~ 代表当前用户的 home 目录，即 /home/django/。 接下来创建虚拟环境，先进入到 ikaros.xin 目录下，然后运行 virtualenv 命令创建虚拟环境： 12root@localhost:~$ cd ~/sites/ikaros.xinroot@localhost:~/sites/ikaros.xin$ virtualenv --python=python3 env 注意这里使用 –python=python3 来指定克隆 Python3 的环境。因为 ubuntu 系统默认安装了 Python2，如果不特别指定的话 Virtualenv 默认克隆的是 Python2 的环境。 检查一下虚拟环境是否创建成功，运行 ls 命令列出当前目录下的文件和文件夹，看到 env 这个文件夹说明虚拟环境创建成功。 12root@localhost:~/sites/ikaros.xin$ lsenv 接着再从代码仓库把项目代码拉取过来，把 git clone 后的地址换成你自己的 GitHub 仓库地址！ 或者使用WinSCP拖取项目代码到ikaros.xin文件夹下。 运行 ls 命令检查一下是否拉取成功： 12root@localhost:~/sites/ikaros.xin$ lsenv ikarosblog 我们看到多了一个文件夹ikarosblog（文件夹名称又你的项目文件名或者GitHub仓库名字决定），说明拉取成功。 安装项目依赖激活虚拟环境，再进入到项目根目录，即 requirements.txt 所在的目录，安装项目的全部依赖： 123root@localhost:~/sites/ikaros.xin$ source env/bin/activate(env)root@localhost:~/sites/ikaros.xin$ cd ikarosblog/(env)root@localhost:~/sites/ikaros.xin/ikarosblog$ pip install -r requirements.txt 收集静态命令虚拟环境下继续运行 python manage.py collectstatic 命令收集静态文件到 static 目录下： 1(env)root@localhost:~/sites/ikaros.xin/ikarosblog$ python manage.py collectstatic 生成数据库虚拟环境下继续运行 python manage.py migrate 命令创建数据库文件： 1(env)root@localhost:~/sites/ikaros.xin/ikarosblog$ python manage.py migrate 注意：如果你的网站使用的是MySQL数据库，则需要安装Ubuntu下的MySQL。详情可参考我的另一篇文章：Ubuntu 16.04的MySQL安装与配置 创建超级用户虚拟环境下继续运行 python manage.py createsuperuser 命令创建一个超级用户，方便我们进入 Django 管理后台。这和本地开发时是一样的。 1(env)root@localhost:~/sites/ikaros.xin/ikarosblog$ python manage.py createsuperuser 配置 Nginx下面我们来配置Nginx用于处理用户请求 先在服务器的 /etc/nginx/sites-available/ 目录下新建一个配置文件，文件名我一般就设置为域名。写上下面的配置内容： 12345678910111213141516171819/etc/nginx/sites-available/ikaros.xinserver &#123; charset utf-8; listen 80; #服务的域名为 ikaros.xin server_name ikaros.xin; location /static &#123; #所有URL 带有 /static 的请求均由 Nginx 处理，alias 指明了静态文件的存放目录。 alias /home/django/sites/ikaros.xin/ikarosblog/static; &#125; location / &#123; #其它请求转发给 Django 处理。proxy_pass 后面使用了 unix 套接字，其作用是防止端口冲突，这里就不再详述。 proxy_set_header Host $host; proxy_pass http://unix:/tmp/ikaros.xin.socket; &#125;&#125; 我们可以选择使用vi编辑器在服务器端写文件，vi编辑器的使用方法百度可查，只需要掌握一点点简单的用法就行了。 当然我们还是可以使用WinSCP来新建文件和写文件，毕竟可视化的界面总比在服务器端写命令好多了，使用WinSCP就和在Windows下一样，这里就不多讲了。 我们在 /etc/nginx/sites-available/ 放置了配置文件，接下来需要创建一个符号链接，把这个配置文件加入到启用的网站列表中去，被启用网站的目录在 /etc/nginx/sites-enabled/，你可以理解为从 sites-available/ 目录下发送了一个配置文件的快捷方式到 sites-enabled/ 目录。具体命令如下： 1(env)root@localhost:~/sites/ikaros.xin/ikarosblog$ sudo ln -s /etc/nginx/sites-available/ikaros.xin /etc/nginx/sites-enabled/ikaros.xin 执行完符号连接后，我们可以发现在 /etc/nginx/sites-available/ 和/etc/nginx/sites-enabled/文件夹下，都各自有两个相同的配置文件一个default文件和一个我们写的ikaros.xin的配置文件。这时我们需要删除系统默认的default文件，不然这个default文件会导致我们自己写的配置文件失效。把default文件删掉就可以正常被nginx代理过去了。 使用GunicornGunicorn 一般用来管理多个进程，有进程挂了Gunicorn 可以把它拉起来，防止服务器长时间停止服务，还可以动态调整 worker 的数量，请求多的时候增加 worker 的数量，请求少的时候减少。 在虚拟环境下，安装 Gunicorn： 1(env)root@localhost:~/sites/ikaros.xin/ikarosblog$ pip install gunicorn 用 Gunicorn 启动服务器进程： 1(env)root@localhost:~/sites/ikaros.xin/ikarosblog$ gunicorn --bind unix:/tmp/ikaros.xin.socket blogproject.wsgi:application 浏览器输入域名，可以看到访问成功了！ 自动启动 Gunicorn现在 Gunicorn 是我们手工启动的，万一哪天服务器崩溃重启了又得重新手工启动。为此我们写一个自动启动脚本，这样当服务器重新启动后，脚本会帮我们重启 Gunicorn。先按 Ctrl + c 停止刚才启动的服务器进程。 写一个启动脚本，这样当服务器重启后能自动引导 Gunicorn 的启动。首先在/lib/systemd/system/目录下，创建服务脚本 bg.service，必须以service结尾： 1234567891011121314# /lib/systemd/system/bg.service[Unit]After=syslog.target network.target remote-fs.target nss-lookup.target[Service]# 你的用户User=django# 你的目录WorkingDirectory=/home/django/sites/ikaros.xin/ikarosblog# gunicorn启动命令ExecStart=/home/django/sites/ikaros.xin/env/bin/gunicorn --bind unix:/tmp/ikaros.xin.socket blogproject.wsgi:applicationRestart=on-failure[Install]WantedBy=multi-user.target 然后设置让脚本开机自动启动 1root@localhost:~$ sudo systemctl enable bg.service 拓展 常用命令 重新加载service文件：systemctl daemon-reload 启动一个服务：systemctl start bg.service 关闭一个服务：systemctl stop bg.service 重启一个服务：systemctl restart bg.service d 显示一个服务的状态：systemctl status bg.service 在开机时启用一个服务：systemctl enable bg.service 在开机时禁用一个服务：systemctl disable bg.service 查看服务是否开机启动：systemctl is-enabled bg.service 查看已启动的服务列表：systemctl list-unit-files|grep enabled 查看启动失败的服务列表：systemctl –failed 以后如果更新了代码，只要运行下面的命令重启一下 Nginx 和 Gunicorn 就可以使新的代码生效了： 12sudo service nginx reloadsudo systemctl enable bg.service 心得总结这篇文章是基于我自己部署这个网站后想写的第一篇正式的干货，即时大部分是基于网上的教程，但是经过我的踩坑，已经排除了这篇教程绝大多数的不足之处。 如果遇到问题，请通过一下方式寻求帮助： 在下方评论区留言。 将问题的详情描述以邮件的方式发送至ikarosyu@Gmail.com，随缘回复（如果我能看见的话，毕竟穷学生没钱搭SS了） – EOF –]]></content>
      <categories>
        <category>develop</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Linux</tag>
        <tag>learn</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Congratulate]]></title>
    <url>%2F2019%2F02%2F28%2Fcongratulate%2F</url>
    <content type="text"><![CDATA[​ 图片插入测试！！！ 插了N次，终于是给插进来了，早点Google多好，用图片外联不好吗？非要加个文件夹进来放图片… 话说在GitHub上搭blog确实性能hin一般，这图片的还是直接从仓库调用的加载却如此的慢。用这个来写博客怕是尽量少放点图。图片显示，全靠cookie帮忙缓存住。 ​ 吐槽完毕！！！]]></content>
      <categories>
        <category>日常</category>
      </categories>
      <tags>
        <tag>pictures</tag>
        <tag>share</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2019%2F02%2F27%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
